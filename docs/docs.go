// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/role": {
            "get": {
                "description": "Get all roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Get roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "result page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "quantity roles per page",
                        "name": "qt",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "all roles",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Role"
                            }
                        }
                    },
                    "401": {
                        "description": "user session has expired",
                        "schema": {
                            "$ref": "#/definitions/server.sent"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/server.sent"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Create role",
                "parameters": [
                    {
                        "description": "role params",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RolePartial"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "create role successfully",
                        "schema": {
                            "$ref": "#/definitions/server.sent"
                        }
                    },
                    "400": {
                        "description": "an invalid role param was sent",
                        "schema": {
                            "$ref": "#/definitions/server.sent"
                        }
                    },
                    "401": {
                        "description": "user session has expired",
                        "schema": {
                            "$ref": "#/definitions/server.sent"
                        }
                    },
                    "403": {
                        "description": "current user is not admin",
                        "schema": {
                            "$ref": "#/definitions/server.sent"
                        }
                    },
                    "409": {
                        "description": "role already exist",
                        "schema": {
                            "$ref": "#/definitions/server.sent"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/server.sent"
                        }
                    }
                }
            }
        },
        "/role/{name}": {
            "get": {
                "description": "Get role by name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Get role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "role name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role return",
                        "schema": {
                            "$ref": "#/definitions/model.Role"
                        }
                    },
                    "401": {
                        "description": "user session has expired",
                        "schema": {
                            "$ref": "#/definitions/server.sent"
                        }
                    },
                    "403": {
                        "description": "current user is not admin",
                        "schema": {
                            "$ref": "#/definitions/server.sent"
                        }
                    },
                    "404": {
                        "description": "role does not exist",
                        "schema": {
                            "$ref": "#/definitions/server.sent"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/server.sent"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Delete role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "role name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role deleted",
                        "schema": {
                            "$ref": "#/definitions/server.sent"
                        }
                    },
                    "401": {
                        "description": "user session has expired",
                        "schema": {
                            "$ref": "#/definitions/server.sent"
                        }
                    },
                    "403": {
                        "description": "current user is not admin",
                        "schema": {
                            "$ref": "#/definitions/server.sent"
                        }
                    },
                    "404": {
                        "description": "role does not exist",
                        "schema": {
                            "$ref": "#/definitions/server.sent"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/server.sent"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Role": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "deletedBy": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.RolePartial": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "server.sent": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
